#!/sbin/openrc-run
# Copyright 1999-2018 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

CHROOT=${SVCNAME#*.}
TMPDIR="/tmp/chroot-mount/${CHROOT}"


depend() {
	need localmount
	need bootmisc
}

start() {
	if [ ${SVCNAME} = "mount-chroot" ]; then
		eerror "You must not call mount-chroot directly."
		eerror "Create a symlink pointing to the service name (chroot-mount.name)"
		return 1
	fi
	if [ "${CHROOT_PATH}" = "" ]; then
		eerror "You must set the variable CHROOT_PATH in the config file"
		return 1
	fi
	if [ "${CHROOT_DIST}" = "" ]; then
		CHROOT_DIST="/usr/portage/distfiles"
	fi
	local eroot portdir distdir
	eroot="$(portageq envvar EROOT)"
	portdir="$(portageq get_repo_path ${eroot} gentoo)"
	distdir="$(portageq envvar DISTDIR)"

	ebegin "Mounting chroot directories"
	mount --rbind /dev "${CHROOT_PATH}"/dev > /dev/null &
	mount -t proc none "${CHROOT_PATH}"/proc > /dev/null &
	mount -o bind /sys "${CHROOT_PATH}"/sys > /dev/null &

	mkdir -p "${TMPDIR}" || die "Could not create tmp dir ${TMPDIR}"
	mount -o bind "${TMPDIR}" "${CHROOT_PATH}"/tmp > /dev/null &

	cp -L /etc/resolv.conf "${CHROOT_PATH}/etc/resolv.conf"

	if [[ "$PORTAGE" -eq 1 ]]; then
		mkdir -p "${CHROOT_PATH}/usr/portage" || die "Could not create portage dir"

		local rwmountopt="-r"
		if [[ "$PORTAGE_RW" -eq 1 ]]; then
			rwmountopt="-w"
		fi

		# rbind is needed to mount potential nfs shared portage dir from host
		mount --rbind "${rwmountopt}" "${portdir}" "${CHROOT_PATH}/usr/portage" > /dev/null &
	fi
	if [[ "${PORTAGE_DIST}" -eq 1 ]]; then
		mkdir -p "${CHROOT_PATH}${CHROOT_DIST}" || die "Could not create portage distfiles dir"

		local rwmountopt="-r"
		[[ "$PORTAGE_DIST_RW" -eq 0 ]] || rwmountopt="-w"

		# rbind is needed to mount potential nfs shared portage dir from host
		mount --rbind "${rwmountopt}" "${distdir}" "${CHROOT_PATH}${CHROOT_DIST}" > /dev/null &
	fi

	eend $? "An error occurred while mounting chroot directories"
}

stop() {
	ebegin "Unmounting chroot directories"
	umount -Rf "${CHROOT_PATH}"/dev > /dev/null &
	umount -f "${CHROOT_PATH}"/proc > /dev/null &
	umount -f "${CHROOT_PATH}"/sys > /dev/null &
	umount -f "${CHROOT_PATH}"/tmp > /dev/null &
	if [ `stat -fc%t:%T "${CHROOT_PATH}/usr/portage/distfiles"` != `stat -fc%t:%T "${CHROOT_PATH}/usr/portage"` ]; then
		umount -Rf "${CHROOT_PATH}"/usr/portage/distfiles > /dev/null &
	fi
	if [ `stat -fc%t:%T "${CHROOT_PATH}/usr/portage"` != `stat -fc%t:%T "${CHROOT_PATH}/usr"` ]; then
		umount -Rf "${CHROOT_PATH}"/usr/portage > /dev/null &
	fi
	eend $? "An error occurred while unmounting chroot directories"
}
